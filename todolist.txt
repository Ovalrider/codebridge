Setup Angular Project:

Install Angular CLI (Command Line Interface) globally if you haven't already: npm install -g @angular/cli.
Create a new Angular project: ng new spaceflight-news-app.
Install Dependencies:

Material UI: ng add @angular/material.
RxJS: Angular already comes with RxJS, so you don't need to install it separately.
Create Components:

Create the components needed for the home page and article page.
For example, create home and article components: ng generate component home, ng generate component article.
Implement the Home Page:

Fetch data from the Spaceflight News API using Angular's HttpClient module.
Create a service to handle API requests (e.g., news.service.ts).
Display Cards on Home Page:

Use Material UI components like MatCard, MatCardHeader, MatCardContent, etc., to display article titles and descriptions as cards.
Make the cards clickable, and upon click, navigate to the respective article page using Angular Router.
Implement Article Page:

When navigating to an article page, fetch the full article details (e.g., title, full description) based on the selected article from the API.
Display the full article details on the article page.
Filtering Articles:

Create an input field on the home page to take the user's input for filtering by keyword.
Implement a function to filter articles based on keywords and prioritize matches in the name over matches in the description.
Use Angular's ngModel to bind the input field with a component property.
Highlighting Keywords:

Implement a function to highlight the matched keywords with a yellow color in the article title and description.
CSS Preprocessor:

You can choose a CSS preprocessor like Sass or Less for writing more maintainable and structured CSS.
State Management (optional):

For state management, you can use NgRx, a popular library for state management in Angular applications.
RxJS Example (optional):
You can demonstrate the use of RxJS for handling asynchronous operations and data streams within the application.